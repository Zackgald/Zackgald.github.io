{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#zack-gald-individual-website","title":"Zack Gald Individual Website","text":"<p>Welcome to our project report for the \"String Machine\" developed for EGR314. This website will provide an overview of our team's design process, ideation, and the technical details behind the String Machine project.</p> <p>My name is Zack Gald, and I am responsible for the stepper motor component of the design. The goal of this project is to create a machine with motor-controlled strings that can produce different tones from human pitches. Through collaboration and iteration, our team has worked to develop an innovative solution, and this site will walk you through our journey, from concept generation to the final design.</p> <p>Team 203 Website: link</p>"},{"location":"API/","title":"API","text":"<p>This page is to show messages and message types between team members</p> <p>Overall Example code: [AZ][SENDERID][RECEIVERID][MESSAGETYPE][VALUE][YB]</p>"},{"location":"API/#parts","title":"Parts","text":"<p>[AZ]: This is the start of the message. This tells the the controller to start reading the message, all messages needs this to be read. NEEDS TO BE IN HEX (0x41)(0x5A)</p> <p>[SENDERID]: This helps others see who sent the message. </p> Teammates SENDER ID Type Zack Z Hex (0x5A) Brendan B Hex (0x42) Carter C Hex (0x43) Sivannee S Hex (0x53) <p>[RECEIVERID]: This helps others see who needs to receive the message. </p> Teammates RECEIVER ID Type Zack Z Hex (0x5A) Brendan B Hex (0x42) Carter C Hex (0x43) Sivannee S Hex (0x53) <p>[Message type]: Shows what the value is going to be for. Message type is a hex (1-4)</p> Message Types Values Type Motor Freq 1 0x31 Wavelength 2 0x32 Motor on/off 3 0x33 NA 4 0x34 <p>[Value]: Shows the value for the message type that is sending through (Values are based what the message type is. This messages are in hex (0-256).</p> Message Types Values Type Motor Freq 0-255 0x30 - 0xFF Wavelength 0-256 0x30 - 0xFF Motor on/off 0-1 0x30-0x31 NA 4 na <p>[YB]: This is the end of the message. This tells the the controller to stop reading the message, all messages needs this to be read. NEEDS TO BE IN HEX (0x59)(0x42)</p>"},{"location":"API/#examples","title":"Examples","text":"<p>0x41 0x5A 0x43 0x5A 0x31 0x28 0x32 0x30 0x30 0x29 0x59 0x42   Carter sends Zack motor freq of 200 </p> <p>0x41 0x5A 0x5A 0x42 0x31 0x28 0x31 0x29 0x59 0x42   Zack sends Brendan motor is on</p>"},{"location":"BOM/","title":"BOM","text":""},{"location":"BOM/#bom-of-allegro","title":"BOM of Allegro","text":""},{"location":"BOM/#purchase-request","title":"Purchase Request","text":"<p>link</p>"},{"location":"ComponentSelection/","title":"ComponentSelection","text":""},{"location":"ComponentSelection/#component-selection-report","title":"Component Selection Report","text":""},{"location":"ComponentSelection/#summary-table-of-major-components","title":"Summary Table of major components","text":"Component type My pick Mircocontroller PIC18F47Q10-E/MP Voltage Regulation NCV2575D2T-12R4G Motor Driver TMC5072 Stepper Motor Driver Motor Stepper NEMA 17 Stepper Motor"},{"location":"ComponentSelection/#decision-making-process","title":"Decision Making Process","text":"<p>Main decision for picking the PIC was at the time, we only used the pic and I knew how to work it and was comfortable with it. If I were to do it over again I would use the PIC again. But add more output pins to see if everything was working correctly.</p> <p>I chosose the voltage regulator I picked because it met all the product requirements. Switching regualator, 12 V to 3.3 V, surface mounted, and can hold 2 A. I would pick this one again, I had no problems with this. </p> <p>I picked the TMC5072 motor driver, it was an easy pick because it was able to have 2 motors and used SPI. All the research said this driver could support a fast motor. I would not pick this again, although I got it to receive SPI data, I couldnt get it to turn the motor. I beleive because it required 8 lines of commend to setup the motor, and the pic wasnt able to send it correctly. I would pick the in class motor driver and use 2 of them and try to run them at the same time. </p> <p>NEMA 17 is a great motor. I picked this one because it needed low current and was able to hold a wave movement. I would use this again. </p>"},{"location":"ComponentSelection/#motor-selection","title":"Motor Selection","text":"Motor Type Pros Cons Cost Datasheet/Buy Link Picture NEMA 17 Stepper Motor Widely used in similar projects, ample tutorials available Not available on Digikey $14 (x2) Datasheet / Buy 324 Stepper Motor Hybrid Available on Digikey, compatible with 12V power Fewer online resources and tutorials $14 (x2) Datasheet / Buy NEMA 23 Stepper Motor High torque, holds position well, simple controls Limited response time, more expensive $31 (x2) Datasheet / Buy"},{"location":"ComponentSelection/#motor-driver-selection","title":"Motor Driver Selection","text":"Motor Driver Pros Cons Cost Datasheet/Buy Link Picture DRV8825 Stepper Motor Driver High current capacity (2.5A peak), Microstepping support (up to 1/32), Widely used with tutorials available Requires heat dissipation for higher currents ~$8 Datasheet / Buy Link A4988 Stepper Motor Driver Simple to use, Supports microstepping (up to 1/16), Affordable Lower current limit (2A peak), Less efficient cooling ~$5 Datasheet TMC5072 Stepper Motor Driver High power handling (3A peak), Good heat dissipation, 2 motor, Adjustable current settings, SPI Bulky, More expensive ~$15 Datasheet / Buy Link"},{"location":"ComponentSelection/#power-supply-regulation","title":"Power Supply &amp; Regulation","text":"Component Pros Cons Cost Datasheet/Buy Link LM7805 (5V Regulator) Simple, widely available Inefficient linear regulator $1 Datasheet NCV2575D2T-12R4G (Switching Regulator) High efficiency, 2 A, 12 V, goes to 3.3 V Requires external components $3 Datasheet"},{"location":"ComponentSelection/#pinout-table","title":"Pinout Table","text":"Peripheral Pin(s) Description Power 2 (3V3) Main power supply (3.3V). 1 (GND) Ground connection. UART 43 (GPIO43) UART0 TXD (Transmit Data). 44 (GPIO44) UART0 RXD (Receive Data). SPI 36 (GPIO36) SPI_MISO (Master In Slave Out). 35 (GPIO35) SPI_MOSI (Master Out Slave In). 37 (GPIO37) SPI_CLK (Clock). 34 (GPIO34) SPI_CS (Chip Select). ADC 1 (GPIO1) ADC1 Channel 0. DAC 17 (GPIO17) DAC1 output. PWM 2 (GPIO2) PWM output GPIO 3 (GPIO3) General-purpose input/output (Buttons, LEDs)."},{"location":"ComponentSelection/#final-pin-count-estimation","title":"Final Pin Count Estimation","text":"Category Estimated Pins SPI (MOSI, MISO, CLK, CS) 4 UART (TX, RX) 2 Power (3.3V, GND x2) 3 Motor Driver (DIR, STEP, EN) 3 ADC (Optional) 1 DAC (Optional) 1 PWM (LEDs, Motor Speed) 1 GPIO (Buttons, Indicators) 2 Programming &amp; Debugging 2\u20134"},{"location":"ComponentSelection/#rationale-for-selections","title":"Rationale for Selections","text":"<ul> <li>Motor Selection: NEMA 17 is chosen due to extensive documentation, ease of programming, and cost-effectiveness.</li> <li>Motor Driver: TMC5072 provides efficient operation with high current handling, suitable for your application.</li> <li>Microcontroller: The PIC18F47Q10 offers strong wireless capabilities and sufficient GPIOs for the project.</li> <li>Power Regulation: NCV2575D2T-12R4G is selected for its high efficiency and adjustable voltage output, ideal for powering the system.</li> </ul>"},{"location":"ComponentSelection/#2-pick-the-microcontroller","title":"2) Pick the microcontroller","text":"<p>A. I have use SPI commucation from the microcontroller to the motor driver. Uart connection to teammates. Overall, there will be 13 pins. 4 SPI, 2 UART, 3 Voltage, 2 ground, and 2 snap pins.</p> <p>B. </p>"},{"location":"ComponentSelection/#pic-info","title":"Pic Info","text":"Parameter Answer Help Model PIC18F27/47Q10 Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL Page Do not paste links directly into the table. Use a link Datasheet URL(s) Datasheet Do not paste links directly into the table. Use a link Vendor Link digikey Digikey, Jameco, etc. Do not paste links directly into the table. Use a link Code Examples CLRF PORTC ; Initialize PORTC by; clearing output; data latchesCLRF LATC ; Alternate method; to clear output; data latchesMOVLW 0CFh ; Value used to; initialize data; directionMOVWF TRISC ; Set RC&lt;3:0&gt; as inputs; RC&lt;5:4&gt; as outputs; RC&lt;7:6&gt; as inputs URL(s) for libraries on GitHub or other sites related to the microcontroller and your planned peripherals Unit Cost $2.52 Find in the Microchip online store or Digikey Absolute Maximum Current for entire IC 4.7 \u03bcF to 47 \u03bcF Find in the microcontroller datasheet Supply Voltage Range 1.8V ~ 5.5V Min / Nominal / Max / Absolute Max, as found in datasheet Absolute Maximum Current (for entire IC) 4.7 \u03bcF to 47 \u03bcF As found in datasheet Maximum GPIO Current (per pin) 4.7 \u03bcF to 47 \u03bcF As found in datasheet Supports External Interrupts? Yes As found in datasheet Required Programming Hardware, Cost, URL Snap Found on the microcontroller's product page Works with MPLabX? Yes Required. See Microchip Development Tools Works with Microchip Code Configurator? Yes Can be validated in MPLabX. Screenshot required."},{"location":"ComponentSelection/#module-availability","title":"Module Availability","text":"Module # Available Needed Associated Pins (or * for any) GPIO 35 0 * ADC 28 0 * UART 2 2 RC6 (TX), RC7 (RX) SPI 2 4 RC3 (SCK), RC4 (SDI), RC5 (SDO), RB3 (SS) I2C 2 0 * PWM 10 1 * ICSP 1 1 RB6 (PGC), RB7 (PGD), MCLR"},{"location":"ComponentSelection/#team-role-and-responsibilities","title":"Team Role and Responsibilities","text":"<p>My role as a member of this team is the actuator, using a stepper motor to create a waveform using a string. I am responsible for ensuring precise control of the motor to achieve the desired motion and vibration needed for sound generation. </p> <p>For communication, I use SPI to interface with the motor driver and UART to connect with my teammates' systems. I also contribute to power management, making sure the motor and driver receive a stable power supply. Additionally, I assist in PCB design, ensuring that all components are properly integrated and function efficiently within the overall system.</p>"},{"location":"ComponentSelection/#final-microcontroller-choice-and-rationale","title":"Final Microcontroller Choice and Rationale","text":"<p>After careful consideration of multiple microcontroller options, the PIC18F47Q10 has been chosen as the optimal microcontroller for this project. This decision is based on several key factors, including its robust peripheral set, efficient power consumption, and strong software support. The PIC18F47Q10 provides essential features such as multiple UART, SPI, and I2C channels, making it well-suited for handling communication with both the motor driver and other system components. Additionally, it offers flexible PWM outputs and timers, which are crucial for precise stepper motor control. </p> <p>Another significant advantage is my previous experience working with PIC microcontrollers, which will expedite development and troubleshooting, allowing for a more efficient workflow. The availability of extensive documentation and Microchip\u2019s development tools, including MPLAB X and MCC, further strengthens this choice. The microcontroller's low-cost, reliable performance, and easy integration into the PCB design make it the best fit for our project. With this selection finalized, I will ensure that we acquire the necessary hardware promptly to stay on track with our development timeline.</p>"},{"location":"ComponentSelection/#3-power-budget","title":"3) Power Budget","text":""},{"location":"Individual%20Block%20Diagram/","title":"Individual Block Diagram","text":""},{"location":"Individual%20Block%20Diagram/#individual-block-diagram","title":"Individual Block Diagram","text":"<p>Block diagram of the Motor part of the project. There is 2 different voltages on the board, 12 V and 3.3 V. The Microcontroller is connected to the motor driver through the SPI connections. The driver is connected to the stepper motor. </p> <p>Decision Process: The different voltages is an easy decision based on needs the 2 voltages for the motor and the mircocontroller. The Motor driver I used inputs both voiltages for the motor power and the internal CPU. </p> <p>One problem I over looked in this process was I thought putting 3.3 volts into pin 1, to connect to others boards. We needed unregulated voltage, likely 9V, so I shouldnt have anything connected. I ended up cutting the lines on my final board.</p>"},{"location":"Schematic%20Design/","title":"Schematic Design","text":""},{"location":"Schematic%20Design/#schematic-design","title":"Schematic Design","text":"<p>Schematic is for the Stepper motor subsystem </p> <p></p> <p>Zip file: firstschematicfeb27.zip</p> <p>PDF file: motorschematic1</p>"},{"location":"Schematic%20Design/#power-budget","title":"Power Budget","text":"<p>The 2 A is enough to support the 12 V rail but it doesnt have the full safety net of 25%. Will keep an eye during testing. </p>"},{"location":"Schematic%20Design/#functionality-of-this-schematic","title":"Functionality of this schematic","text":"<p>The actuator subsystem for the String Machine project features a NEMA 17 stepper motor controlled by the TMC5072 motor driver, which communicates with the system\u2019s microcontroller via SPI. This setup ensures precise bidirectional control, allowing the motor to adjust the string tension dynamically to produce different sound waves. The TMC5072\u2019s integration into the PCB, rather than using a breakout board, enhances reliability and reduces potential signal integrity issues. Additionally, the motor operates at 12V, ensuring sufficient torque while maintaining efficiency. This configuration meets the project\u2019s requirement for a serially controlled actuator while providing smooth and accurate motion for the string tensioning mechanism.</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}