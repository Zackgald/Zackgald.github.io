{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#zack-gald-egr-314-website","title":"Zack Gald EGR 314 Website","text":"<p>Team 203</p> <p>Individual Datasheet link</p>"},{"location":"ComponentSelection/","title":"ComponentSelection","text":""},{"location":"ComponentSelection/#component-selection-report","title":"Component Selection Report","text":""},{"location":"ComponentSelection/#motor-selection","title":"Motor Selection","text":"Motor Type Pros Cons Cost Datasheet/Buy Link Pictuere NEMA 17 Stepper Motor Widely used in similar projects, ample tutorials available Not available on Digikey $14 (x2) Datasheet / Buy 324 Stepper Motor Hybrid Available on Digikey, compatible with 12V power Fewer online resources and tutorials $14 (x2) Datasheet / Buy NEMA 23 Stepper Motor High torque, holds position well, simple controls Limited response time, more expensive $31 (x2) Datasheet / Buy"},{"location":"ComponentSelection/#motor-driver-selection","title":"Motor Driver Selection","text":"Motor Driver Pros Cons Cost Datasheet/Buy Link Picture DRV8825 Stepper Motor Driver High current capacity (2.5A peak), Microstepping support (up to 1/32), Widely used with tutorials available Requires heat dissipation for higher currents ~$8 Datasheet / Buy Link A4988 Stepper Motor Driver Simple to use, Supports microstepping (up to 1/16), Affordable Lower current limit (2A peak), Less efficient cooling ~$5 Datasheet / Buy Link TB6600 Stepper Motor Driver High power handling (4.5A peak), Good heat dissipation, Adjustable current settings Bulky, More expensive ~$15 Datasheet / Buy Link"},{"location":"ComponentSelection/#microcontroller-selection","title":"Microcontroller Selection","text":"Microcontroller Pros Cons Datasheet PIC18F47Q10 Built-in Bluetooth, supports UART Limited SPI/I2C channels Datasheet ESP32-S3-WROOM-1-N4 Wi-Fi/Bluetooth, powerful processing Higher power consumption Datasheet"},{"location":"ComponentSelection/#role-of-team","title":"Role of Team","text":"<p>My primary responsibility is managing the motor and motor driver, ensuring precise control over the string's motion to produce different sound waves. I am also in charge of designing and constructing the physical structure, making sure it is sturdy, functional, and integrates well with the other components. For sensing, I focus on monitoring motor position and speed, possibly using encoders or current sensing. Actuation involves selecting and implementing the appropriate motor and driver to achieve smooth and consistent movement. In terms of display, I ensure that motor status and control feedback are visible. Power management is crucial, as the motor requires stable voltage and current to function efficiently without overloading the system.</p>"},{"location":"ComponentSelection/#pick-of-mircocontroller","title":"Pick of Mircocontroller","text":"<p>The ESP32-S3-WROOM-1-N4 is the better choice for controlling a NEMA 17 stepper motor due to its higher processing power, built-in WiFi and Bluetooth, and strong software support. It offers flexible PWM outputs and timers for precise motor control, along with more RAM and Flash memory for expandability.</p>"},{"location":"ComponentSelection/#esp32-s3-wroom-1-n4-pin-allocation","title":"ESP32-S3-WROOM-1-N4 Pin Allocation","text":""},{"location":"ComponentSelection/#pinout-table","title":"Pinout Table","text":"Peripheral Pin(s) Description Power 2 (3V3) Main power supply (3.3V). 1 (GND) Ground connection. UART 43 (GPIO43) UART0 TXD (Transmit Data). 44 (GPIO44) UART0 RXD (Receive Data). SPI 36 (GPIO36) SPI_MISO (Master In Slave Out). 35 (GPIO35) SPI_MOSI (Master Out Slave In). 37 (GPIO37) SPI_CLK (Clock). 34 (GPIO34) SPI_CS (Chip Select). SPI2 33 (GPIO36) SPI_MISO (Master In Slave Out). 32 (GPIO35) SPI_MOSI (Master Out Slave In). 31 (GPIO37) SPI_CLK (Clock). 30 (GPIO34) SPI_CS (Chip Select). ADC 1 (GPIO1) ADC1 Channel 0. DAC 17 (GPIO17) DAC1 output. PWM 2 (GPIO2) PWM output GPIO 3 (GPIO3) General-purpose input/output (Buttons, LEDs)."},{"location":"ComponentSelection/#final-pin-count-estimation","title":"Final Pin Count Estimation","text":"Category Estimated Pins SPI (MOSI, MISO, CLK, CS) 8 UART (TX, RX) 2 Power (3.3V, GND x2) 3 Motor Driver (DIR, STEP, EN) 3 ADC (Optional) 1 DAC (Optional) 1 PWM (LEDs, Motor Speed) 1 GPIO (Buttons, Indicators) 2 Programming &amp; Debugging 2\u20134"},{"location":"ComponentSelection/#reference","title":"Reference","text":"<p>For more details, check the ESP32-S3-WROOM-1 datasheet.</p>"},{"location":"ComponentSelection/#power-supply-regulation","title":"Power Supply &amp; Regulation","text":"Component Pros Cons Cost Datasheet/Buy Link LM7805 (5V Regulator) Simple, widely available Inefficient linear regulator $1 Datasheet MP1584 (Switching Regulator) High efficiency, adjustable voltage Requires external components $3 Datasheet"},{"location":"ComponentSelection/#rationale-for-selections","title":"Rationale for Selections","text":"<ul> <li>Motor Selection: NEMA 17 is chosen due to extensive documentation, ease of programming, and cost-effectiveness.</li> <li>DRV8825 Stepper Motor Driver: </li> <li>Microcontroller: ESP32-S3 is selected due to its strong wireless capabilities and sufficient GPIOs for the project.</li> <li>Sensor: BNO085 is optimal due to its accuracy and built-in fusion algorithms, reducing processing overhead.</li> <li>Power Regulation: MP1584 is chosen for efficiency in voltage regulation, ensuring stable operation.</li> </ul>"},{"location":"Individualdatasheet/","title":"Individualdatasheet","text":""},{"location":"Individualdatasheet/#individual-block-diagram","title":"Individual Block Diagram","text":"<p>The motor View the Block Diagram (PDF)</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}